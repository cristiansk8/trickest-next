// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  nickname            String    @unique
  oldNicknames        String[]  @default([])
  name                String?
  phone               String?
  phoneVerified       Boolean   @default(false)
  photo               String?
  status              String?
  state               String?
  city                String?
  birthdate           DateTime?
  bio                 String?
  level               String?
  preferredSkateStyle String?
  isPro               Boolean   @default(false)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @default(now()) @updatedAt

  // Relations (all optional)
  socials      SocialMedia[]
  wishSkate    WishSkate?
  tricks       Trick[]
  achievements Achievement[]
  sponsors     Sponsor[]

  @@index([nickname])
  @@index([email])
}

model SocialMedia {
  id        Int     @id @default(autoincrement())
  userId    String  @unique
  facebook  String?
  instagram String?
  twitter   String?
  tiktok    String?
  youtube   String?
  linkedin  String?

  user User @relation(fields: [userId], references: [email])
}

model WishSkate {
  id       Int     @id @default(autoincrement())
  userId   String  @unique
  deck     String? // "madero" translated to "deck" (skateboard deck)
  trucks   String?
  wheels   String?
  bearings String?
  shoes    String?
  helmet   String?
  pads     String?
  notes    String?

  user User @relation(fields: [userId], references: [email])
}

model Trick {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  videoUrl    String
  difficulty  String
  likesCount  Int      @default(0)
  createdAt   DateTime @default(now())
  userId      Int

  user User @relation(fields: [userId], references: [id])
}

model Achievement {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  date        DateTime
  userId      Int

  user User @relation(fields: [userId], references: [id])
}

model Sponsor {
  id      Int     @id @default(autoincrement())
  name    String
  logo    String?
  website String?
  userId  Int

  user User @relation(fields: [userId], references: [id])
}
